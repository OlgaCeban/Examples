#Дан лог веб-сервера, который содержит строки с IP-адресами машин,
#с которых обращались к сайту, и время обращения. Один запрос - одна строка лога.
#Нужно определить, с каких IP-адресов было больше всего обращений.
#Напиши программу, которая принимает на вход такой лог и выводит на
#экран список IP-адресов, отсортированных в порядке убывания количества пришедших от них запросов.

#Например, если лог содержит следующие записи:
"""
[2019-08-29 13:00:13] 10.64.64.8
[2019-08-29 13:15:35] 95.213.255.16
[2019-08-29 14:14:33] 10.64.64.8
[2019-09-01 14:14:35] 35.228.158.140
[2019-09-01 14:14:35] 35.228.158.140
[2019-09-01 15:29:01] 35.228.158.140
"""

#Программа должна вывести на экран:

"""
35.228.158.140
10.64.64.8
95.213.255.16
"""



import sys, re
from collections import Counter
#Чтение лога
data = sys.stdin.readlines()
#Преобразование в строку
dataStr= str(data)
#Убираем перенос строки и лишние апострофы
dataStr = dataStr.replace('\\n', '')
dataStr = dataStr.replace('\'', '')
#Убираем временные метки с помощью регулярных выражений
pattern = re.compile("\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\] ")
dataStr = re.sub(pattern,'', dataStr)
#Убираем лишние скобки
dataStr = re.sub('[\ [\]]','', dataStr)
dataStr = dataStr.split(',')      
cnt = dict(Counter(dataStr))
sd = sorted(cnt.values())
for k in reversed(sd):
    print(list(cnt.keys())[list(cnt.values()).index(k)])
